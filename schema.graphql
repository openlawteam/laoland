type Molochv3 @entity {
  id: ID!
  daoAddress: Bytes # dao address
  name: String
  creator: Bytes
  totalShares: String
  createdAt: String

  "The bank of the DAO"
  bank: Bank
  "List of registered adapters"
  adapters: [Adapter!]! @derivedFrom(field: "molochv3")
  "List of registered extensions"
  extensions: [Extension!]! @derivedFrom(field: "molochv3")
}

type Member @entity {
  id: ID!
  # "TODO: members can be a part of multiple Molochv3"
  memberAddress: Bytes!
  createdAt: String!
  delegateKey: Bytes!
  shares: BigInt!
  loot: BigInt!
  lockedLoot: BigInt!
  # flags: BigInt!
  tokenBalances: [TokenBalance!] @derivedFrom(field: "member")
  proposals: [Proposal!] @derivedFrom(field: "member")
  jailed: Boolean!
}

type Proposal @entity {
  id: ID!
  proposalId: Bytes!
  flags: BigInt!
  submittedBy: Bytes
  sponsored: Boolean
  sponsoredAt: String
  sponsoredBy: Bytes
  processed: Boolean
  processedAt: String
  processedBy: Bytes
  member: Member
  # votes #todo 1-1
}

type Bank @entity {
  id: ID!
  bankAddress: Bytes # bank address
  daoAddress: Bytes # dao address
  balance: BigInt
  createdAt: String
  totalShares: BigInt
  # molochv3: Molochv3
}

type Token @entity {
  id: ID!
  tokenAddress: Bytes!
  symbol: String
  logo: String
  decimals: String
  whitelisted: Boolean
}

type TokenBalance @entity {
  id: ID!
  token: Token!
  tokenBalance: BigInt!
  member: Member
}


type Adapter @entity {
  id: ID!
  adapterId: Bytes!
  adapterAddress: Bytes!
  "Adapter acl (access control layer)"
  acl: BigInt!
  molochv3: Molochv3
}

type Extension @entity {
  id: ID!
  "Extension contract address"
  extensionAddress: Bytes!
  "Extension id"
  extensionId: Bytes!
  molochv3: Molochv3
}
