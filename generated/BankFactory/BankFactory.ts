// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BankCreated extends ethereum.Event {
  get params(): BankCreated__Params {
    return new BankCreated__Params(this);
  }
}

export class BankCreated__Params {
  _event: BankCreated;

  constructor(event: BankCreated) {
    this._event = event;
  }

  get bankAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class BankFactory extends ethereum.SmartContract {
  static bind(address: Address): BankFactory {
    return new BankFactory("BankFactory", address);
  }

  getFlag(flags: BigInt, flag: BigInt): boolean {
    let result = super.call("getFlag", "getFlag(uint256,uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(flags),
      ethereum.Value.fromUnsignedBigInt(flag)
    ]);

    return result[0].toBoolean();
  }

  try_getFlag(flags: BigInt, flag: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("getFlag", "getFlag(uint256,uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(flags),
      ethereum.Value.fromUnsignedBigInt(flag)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  identityAddress(): Address {
    let result = super.call(
      "identityAddress",
      "identityAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_identityAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "identityAddress",
      "identityAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  setFlag(flags: BigInt, flag: BigInt, value: boolean): BigInt {
    let result = super.call(
      "setFlag",
      "setFlag(uint256,uint256,bool):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(flags),
        ethereum.Value.fromUnsignedBigInt(flag),
        ethereum.Value.fromBoolean(value)
      ]
    );

    return result[0].toBigInt();
  }

  try_setFlag(
    flags: BigInt,
    flag: BigInt,
    value: boolean
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "setFlag",
      "setFlag(uint256,uint256,bool):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(flags),
        ethereum.Value.fromUnsignedBigInt(flag),
        ethereum.Value.fromBoolean(value)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _identityAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateBankCall extends ethereum.Call {
  get inputs(): CreateBankCall__Inputs {
    return new CreateBankCall__Inputs(this);
  }

  get outputs(): CreateBankCall__Outputs {
    return new CreateBankCall__Outputs(this);
  }
}

export class CreateBankCall__Inputs {
  _call: CreateBankCall;

  constructor(call: CreateBankCall) {
    this._call = call;
  }

  get dao(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class CreateBankCall__Outputs {
  _call: CreateBankCall;

  constructor(call: CreateBankCall) {
    this._call = call;
  }
}

export class ConfigureAdadpterCall extends ethereum.Call {
  get inputs(): ConfigureAdadpterCall__Inputs {
    return new ConfigureAdadpterCall__Inputs(this);
  }

  get outputs(): ConfigureAdadpterCall__Outputs {
    return new ConfigureAdadpterCall__Outputs(this);
  }
}

export class ConfigureAdadpterCall__Inputs {
  _call: ConfigureAdadpterCall;

  constructor(call: ConfigureAdadpterCall) {
    this._call = call;
  }

  get dao(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get bank(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get adapter(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get acl(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class ConfigureAdadpterCall__Outputs {
  _call: ConfigureAdadpterCall;

  constructor(call: ConfigureAdadpterCall) {
    this._call = call;
  }
}
